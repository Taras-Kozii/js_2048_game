{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelector","addEventListener","handleStartClick","messageLose","messageWin","gameField","rows","allCells","querySelectorAll","setGlobalHandleKeydown","keyCode","clickArrowUp","clickArrowDown","clickArrowRight","clickArrowLeft","addRandomCell","emptyCells","filter","cell","textContent","length","randomCell","Math","floor","random","cellContent","innerText","classList","add","handleRestarClick","innerHTML","className","updateScore","isBlocked","checkBefoCellChange","isMoved","isMerged","remove","value","e","code","i","item","cellIndex","reverse","getLoseStatus","row","cells","mergeCells","cell1","cell2","content","getWinnerStatus","moveCells","newValue","k","find","emptyCell","arrowsStatus"],"mappings":"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","file":"main.3af00d8b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('.game-header .button');\n\nbutton.addEventListener('click', handleStartClick);\n\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nconst gameField = document.querySelector('.game-field');\nconst rows = [...gameField.rows];\nconst allCells = [...gameField.querySelectorAll('td')];\n\nfunction setGlobalHandleKeydown(keyCode) {\n  if (keyCode === 'ArrowUp') {\n    clickArrowUp();\n  }\n\n  if (keyCode === 'ArrowDown') {\n    clickArrowDown();\n  }\n\n  if (keyCode === 'ArrowRight') {\n    clickArrowRight();\n  }\n\n  if (keyCode === 'ArrowLeft') {\n    clickArrowLeft();\n  }\n}\n\nfunction addRandomCell() {\n  const emptyCells = allCells.filter(cell => cell.textContent.length === 0);\n\n  const randomCell = Math.floor(Math.random() * emptyCells.length);\n  const cellContent = Math.random() < 0.9 ? 2 : 4;\n\n  emptyCells[randomCell].innerText = cellContent;\n  emptyCells[randomCell].classList.add(`field-cell--${cellContent}`);\n}\n\nfunction handleRestarClick() {\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n\n  for (const cell of allCells) {\n    cell.innerHTML = '';\n    cell.className = 'field-cell';\n  }\n\n  addRandomCell();\n  addRandomCell();\n  updateScore(0);\n  clickArrowUp.isBlocked = false;\n  clickArrowDown.isBlocked = false;\n  clickArrowRight.isBlocked = false;\n  clickArrowLeft.isBlocked = false;\n  checkBefoCellChange.isMoved = false;\n  checkBefoCellChange.isMerged = false;\n}\n\nfunction handleStartClick() {\n  button.innerHTML = 'Restart';\n  button.classList.remove('start');\n  button.classList.add('restart');\n  document.querySelector('.message-start').classList.add('hidden');\n  updateScore.value = 0;\n\n  document.addEventListener('keydown', e => setGlobalHandleKeydown(e.code));\n\n  document.querySelector('.restart').addEventListener('click',\n    handleRestarClick);\n\n  addRandomCell();\n  addRandomCell();\n}\n\nfunction clickArrowUp() {\n  for (let i = 0; i < 4; i++) {\n    const column = allCells.filter(item => item.cellIndex === i).reverse();\n\n    checkBefoCellChange(column);\n  }\n\n  if (checkBefoCellChange.isMerged || checkBefoCellChange.isMoved) {\n    addRandomCell();\n    checkBefoCellChange.isMerged = false;\n    checkBefoCellChange.isMoved = false;\n    clickArrowUp.isBlocked = false;\n  } else {\n    clickArrowUp.isBlocked = true;\n    getLoseStatus();\n  }\n}\n\nfunction clickArrowDown() {\n  for (let i = 0; i < 4; i++) {\n    const column = allCells.filter(item => item.cellIndex === i);\n\n    checkBefoCellChange(column);\n  }\n\n  if (checkBefoCellChange.isMerged || checkBefoCellChange.isMoved) {\n    addRandomCell();\n    checkBefoCellChange.isMerged = false;\n    checkBefoCellChange.isMoved = false;\n    clickArrowDown.isBlocked = false;\n  } else {\n    clickArrowDown.isBlocked = true;\n    getLoseStatus();\n  }\n}\n\nfunction clickArrowRight() {\n  for (const row of rows) {\n    const rowCells = [...row.cells];\n\n    checkBefoCellChange(rowCells);\n  }\n\n  if (checkBefoCellChange.isMerged || checkBefoCellChange.isMoved) {\n    addRandomCell();\n    checkBefoCellChange.isMerged = false;\n    checkBefoCellChange.isMoved = false;\n    clickArrowRight.isBlocked = false;\n  } else {\n    clickArrowRight.isBlocked = true;\n    getLoseStatus();\n  }\n}\n\nfunction clickArrowLeft() {\n  for (const row of rows) {\n    const rowCells = [...row.cells].reverse();\n\n    checkBefoCellChange(rowCells);\n  }\n\n  if (checkBefoCellChange.isMerged || checkBefoCellChange.isMoved) {\n    addRandomCell();\n    checkBefoCellChange.isMerged = false;\n    checkBefoCellChange.isMoved = false;\n    clickArrowLeft.isBlocked = false;\n  } else {\n    clickArrowLeft.isBlocked = true;\n    getLoseStatus();\n  }\n}\n\nfunction mergeCells(cell1, cell2) {\n  const content = +cell2.innerText + +cell1.innerText;\n\n  cell2.innerText = content;\n  cell2.classList.remove(cell2.classList[1]);\n  cell2.classList.add(`field-cell--${content}`);\n  cell1.innerText = '';\n  cell1.classList.remove(cell1.classList[1]);\n  getWinnerStatus();\n}\n\nfunction moveCells(cell1, cell2) {\n  cell2.innerText = cell1.innerText;\n  cell2.classList.add(`field-cell--${cell1.innerText}`);\n  cell1.innerText = '';\n  cell1.classList.remove(cell1.classList[1]);\n}\n\nfunction updateScore(newValue) {\n  updateScore.value += newValue;\n\n  const score = document.querySelector('.game-score');\n\n  score.innerText = updateScore.value;\n}\n\nfunction checkBefoCellChange(cells) {\n  for (let k = 0; k < cells.length - 1; k++) {\n    if (!cells[k].innerText) {\n      continue;\n    }\n\n    if (!cells[k + 1].innerText) {\n      moveCells(cells[k], cells[k + 1]);\n      checkBefoCellChange.isMoved = true;\n    }\n\n    if (+cells[k].innerText !== +cells[k + 1].innerText) {\n      continue;\n    }\n\n    if (+cells[k].innerText === +cells[k + 1].innerText) {\n      mergeCells(cells[k], cells[k + 1]);\n      updateScore(+cells[k].innerText + +cells[k + 1].innerText);\n      checkBefoCellChange.isMerged = true;\n      break;\n    }\n  }\n}\n\nfunction getWinnerStatus() {\n  const winnerValue = allCells.find(item => +item.innerText === 2048);\n\n  if (winnerValue) {\n    messageWin.classList.remove('hidden');\n  }\n}\n\nfunction getLoseStatus() {\n  const emptyCell = allCells.find(item => item.innerText.length === 0);\n  const arrowsStatus = clickArrowUp.isBlocked && clickArrowRight.isBlocked\n    && clickArrowLeft.isBlocked && clickArrowDown.isBlocked;\n\n  if (!emptyCell && arrowsStatus) {\n    messageLose.classList.remove('hidden');\n  }\n}\n"]}